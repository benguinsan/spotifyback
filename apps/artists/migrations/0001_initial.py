# Generated by Django 5.1.7 on 2025-03-08 13:35

import autoslug.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last name')),
                ('display_name', models.CharField(blank=True, db_index=True, max_length=100, unique=True, verbose_name='display name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='display_name', unique=True)),
                ('is_verify', models.BooleanField(default=False, verbose_name='is verify')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='artist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Artist',
                'verbose_name_plural': 'Artists',
                'ordering': ['-updated_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArtistVerificationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_processed', models.BooleanField(default=False, verbose_name='is processed')),
                ('artist', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verification_requests', to='artists.artist')),
            ],
            options={
                'verbose_name': 'Artist verification request',
                'verbose_name_plural': 'Artist verification requests',
                'ordering': ['-created_at', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('text', models.TextField(max_length=1000, verbose_name='text')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='licenses', to='artists.artist')),
            ],
            options={
                'verbose_name': 'License',
                'verbose_name_plural': 'Licenses',
                'ordering': ['-created_at', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='FavoriteArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_artists', to='artists.artist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_artists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Favorite artist',
                'verbose_name_plural': 'Favorite artists',
                'ordering': ['-created_at', '-updated_at'],
                'unique_together': {('user', 'artist')},
            },
        ),
    ]
